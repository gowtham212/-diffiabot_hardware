<launch>
<!--roserial -->
 <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
    <param name="port" value="/dev/esp32"/>
    <param name="baud" value="115200"/>
 </node>
 <!-- Publish: /initial_2d, /goal_2d -->

 
 <param name="robot_description" command="$(find xacro)/xacro '$(find iabot_description)/urdf/iabot.xacro'"/>

<!--rplider-->
   <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
  <param name="serial_port"         type="string" value="/dev/usb_lidar"/>
  <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
  <!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
  <param name="frame_id"            type="string" value="laser_link"/>
  <param name="inverted"            type="bool"   value="false"/>
  <param name="angle_compensate"    type="bool"   value="true"/>
  </node>


<!-- <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom" /> -->

<!-- send fake joint values -->
<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
   <param name="use_gui" value="False"/>
 </node>
<!-- Combine joint values -->
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
<!-- gmapping -->
 <node name="gmapping" pkg="gmapping" type="slam_gmapping">
    <rosparam file="$(find iabot_nav)/config/gmaping.yaml" command="load"/>
  </node>
 <node pkg="localization_data_pub" type="rviz_click_to_2d" name="rviz_click_to_2d">
  </node>   

  <!-- Odometry Publisher -->
  <!-- Subscribe: /right_ticks, /left_ticks, /initial_2d -->
  <!-- Publish: /odom_data_euler, /odom_data_quat -->
  <node pkg="localization_data_pub" type="ekf_odom_pub" name="ekf_odom_pub">
  </node> 

 </launch>